# repos.yaml
# Specify TERRAGRUNT_TFPATH environment variable to accommodate setting --default-tf-version
# Generate json plan via terragrunt for policy checks
repos:
  - id: "/.*/"
    workflow: terragrunt
    # Projects can choose their workflow
    allowed_overrides: [workflow]
    apply_requirements: [mergeable, approved, undiverged]
    import_requirements: [mergeable, undiverged]
    delete_source_branch_on_merge: true
    # Generate terragrunt repo config
    pre_workflow_hooks:
      - run: |
          if [ -s terragrunt.hcl ];then
            /scripts/generate-terragrunt-config.sh
          fi
    # Infracost post workflow
    post_workflow_hooks:
      - run: |
          # post_workflow_hooks are executed after the repo workflow has run.
          # This enables you to post an Infracost comment with the combined cost output
          # from all your projects. However, post_workflow_hooks are also triggered when
          # an apply occurs. In order to stop commenting on PRs twice we need to check
          # if the Infracost output directory created in our 'plan' stage exists before continuing.
          if [ ! -d "/data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM" ]; then
            exit 0
          fi

          # Choose the commenting behavior, 'new' is a good default:
          # new: Create a new cost estimate comment on every run of Atlantis for each project.
          # update: Create a single comment and update it. The "quietest" option.
          # hide-and-new: Minimize previous comments and create a new one.
          # delete-and-new: Delete previous comments and create a new one.
          for infrafile in `ls /data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM/*-infracost.json`;do
            infracost comment github --repo $BASE_REPO_OWNER/$BASE_REPO_NAME \
                                    --pull-request $PULL_NUM \
                                    --path "$infrafile" \
                                    --github-token "$ATLANTIS_GH_TOKEN" \
                                    --behavior new >> /data/infracost/infracost.log 2>&1
          done

          # remove the Infracost output directory so that `infracost comment` is not
          # triggered on an `atlantis apply`
          rm -rf /data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM
workflows:
  #
  # Available env vars in run steps:
  # https://www.runatlantis.io/docs/custom-workflows.html#step
  #
  # It's important that this is "default".
  default:
    plan:
      steps:
        # Force impersonation by terraform
        - env:
            name: GOOGLE_IMPERSONATE_SERVICE_ACCOUNT
            command: "/scripts/get-environment-service-account.sh"
        - init
        - run: terraform plan -input=false -out=$PLANFILE
        - run: terraform show -json $PLANFILE > $SHOWFILE
        - run: |
            if [ -n "$ATLANTIS_GH_TOKEN" ];then
              if [ ! -d "/data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM" ]; then
                mkdir -p /data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM
              fi

              infracost breakdown --path=$SHOWFILE \
                                  --format=json \
                                  --log-level=info \
                                  --out-file=$INFRACOST_OUTPUT \
                                  --project-name=$REPO_REL_DIR
            fi
    apply:
      steps:
        # Force impersonation by terraform
        - env:
            name: GOOGLE_IMPERSONATE_SERVICE_ACCOUNT
            command: "/scripts/get-environment-service-account.sh"
        - run: terraform apply $PLANFILE
  terragrunt:
    plan:
      steps:
        # Force impersonation by terraform
        - env:
            name: GOOGLE_IMPERSONATE_SERVICE_ACCOUNT
            command: "/scripts/get-environment-service-account.sh"
        - env:
            name: INFRACOST_OUTPUT
            command: 'echo "/data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM/$WORKSPACE-${REPO_REL_DIR//\//-}-infracost.json"'
        - env:
            name: TERRAGRUNT_TFPATH
            command: 'echo "terraform${ATLANTIS_TERRAFORM_VERSION}"'
        - run: terragrunt plan -input=false -out=$PLANFILE
        - run: terragrunt show -json $PLANFILE > $SHOWFILE
        - run: |
            if [ -n "$ATLANTIS_GH_TOKEN" ];then
              if [ ! -d "/data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM" ]; then
                mkdir -p /data/infracost/$BASE_REPO_OWNER-$BASE_REPO_NAME-$PULL_NUM
              fi

              infracost breakdown --path=$SHOWFILE \
                                  --format=json \
                                  --log-level=info \
                                  --out-file=$INFRACOST_OUTPUT \
                                  --project-name=$REPO_REL_DIR
            fi
    apply:
      steps:
        # Force impersonation by terraform
        - env:
            name: GOOGLE_IMPERSONATE_SERVICE_ACCOUNT
            command: "/scripts/get-environment-service-account.sh"
        - run: terragrunt apply $PLANFILE
